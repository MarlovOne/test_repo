name: CI-Android
on:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - main
      - develop

jobs:
  Test_android:
    name: ${{matrix.os}} ${{matrix.compiler}} ${{matrix.build_type}} ${{matrix.arch}} ${{matrix.packaging_maintainer_mode == 'ON' && '(maintainer mode)' || ''}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      # Recommendations:
      #   * support at least 2 operating systems
      #   * support at least 2 compilers
      #   * make sure all supported configurations for your project are built
      #
      # Disable/enable builds in this list to meet the above recommendations
      # and your own projects needs
      matrix:
        os:
          - ubuntu-latest
        compiler:
          # you can specify the version after `-` like "llvm-18.1.8".
          - gcc
        arch:
          - arm64-v8a
          - x86_64
        build_type:
          - Release
          - Debug
        packaging_maintainer_mode:
          # - OFF
          - ON
        is_tagged:
          - ${{ startsWith(github.ref, 'refs/tags/') }}

        include:
          # Add appropriate variables for gcov version required. This will intentionally break
          # if you try to use a compiler that does not have gcov set
          - compiler: gcc
            generator: "Ninja Multi-Config"
            gcov_executable: gcov

        exclude:

          # Exclude Debug builds if tag is present - we aare packaging only release builds
          - is_tagged: true
            build_type: Debug
          
          # Exclude Release builds if tag is not present
          - is_tagged: false
            build_type: Release  

    steps:

      - uses: actions/checkout@v4

      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          packaging_maintainer_mode: ${{ matrix.packaging_maintainer_mode }}
          generator: ${{ matrix.generator }}

      - name: Project Name
        uses: cardinalby/export-env-action@v2
        with:
          envFile: '.github/constants.env'

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          # It is important not to install llvm on macos, but use the one that comes with the system
          # Otherwise weird dyld errors will happen
          compiler: false
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          vcpkg: false
          ccache: false
          clangtidy: false
          cppcheck: false

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26
          add-to-path: true

      - name: Configure CMake
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          ./scripts/install_deps_android.sh
          ./scripts/make_android.sh 
            --arch ${{ matrix.arch }} \
            --build-type ${{ matrix.build_type }} \
            --maintainer-mode ${{ matrix.packaging_maintainer_mode }} \
            --git-sha ${{ github.sha }} \
            --enable-coverage ${{ matrix.build_type == 'Debug' }} \
            --build-dir ${{ env.BUILD_DIR }}

      - name: CPack
        if: matrix.build_type == 'Release'
        working-directory: ${{ env.BUILD_DIR }}
        run: |
            cpack -C ${{matrix.build_type}} -G ${{ contains(matrix.os, 'windows') && 'ZIP' || 'TBZ2' }}

      - name: Publish Tagged Release
        uses: softprops/action-gh-release@v2
        if: ${{ matrix.is_tagged && matrix.build_type == 'Release' }}
        with:
          token: ${{ secrets.GH_PAT }}
          files: |
            ${{ env.BUILD_DIR }}/*-*${{ matrix.build_type }}*-*.*